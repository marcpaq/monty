openapi: 3.0.1
info:
  title: Monty API
  description: Manage the knights in your kingdom. Use this API to create,
    read, update, and slay your kingdom's knights. You can also manage
    their friendships and shrubbery.
  version: "1.0"
servers:
- url: https://monty.cloud.example.com/rest/v1
tags:
- name: Knights
  description: Manage knights
paths:
  /{kingdomId}/knights:
    get:
      tags:
      - Knights
      summary: 'List all knights in your kingdom'
      operationId: knightsIndex
      parameters:
      - $ref: '#/components/parameters/kingdomIdInPath'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestListOfKnights'
    post:
      tags:
      - Knights
      summary: 'Create a new knight'
      operationId: knightsCreate
      parameters:
      - $ref: '#/components/parameters/kingdomIdInPath'
      requestBody:
        $ref: '#/components/requestBodies/createKnight'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestKnight'
  /{kingdomId}/knights/{knightId}:
    get:
      tags:
      - Knights
      summary: 'Read data for a knight'
      operationId: knightsShow
      parameters:
      - $ref: '#/components/parameters/kingdomIdInPath'
      - $ref: '#/components/parameters/knightIdInPath'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestKnight'
    put:
      tags:
      - Knights
      summary: 'Update data for a knight'
      operationId: knightsUpdate
      parameters:
      - $ref: '#/components/parameters/kingdomIdInPath'
      - $ref: '#/components/parameters/knightIdInPath'
      requestBody:
        $ref: '#/components/requestBodies/editKnight'
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestKnight'
    delete:
      tags:
      - Knights
      summary: Slay a knight, deleting it from your kingdom
      operationId: knightsDelete
      parameters:
      - $ref: '#/components/parameters/kingdomIdInPath'
      - $ref: '#/components/parameters/knightIdInPath'
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                type: string
              example: {}
components:
  schemas:
    RestListOfKnights:
      type: array
      items:
        $ref: '#/components/schemas/RestKnight'
    RestKnight:
      type: object
      properties:
        id:
          type: string
          description: 'Unique ID, assigned by . Read only.'
          format: 'guid' # TODO
          example: '01234567-89ab-cdef-0123-456789abcdef'
        name:
          pattern: 'Name'
          type: string
          description: Must begin with 'Sir ' or 'S1r ' and followed only
            by non-accentuated alphanumeric characters. Total length must
            be between 5 and 256 characters. Readable and updatable.
          example: 'Sir Fred'
        age:
          maximum: 65 # TODO
          minimum: 18 # TODO
          type: integer
          description: Age, in years. Readable and updatable. You can
            update this property if the new age is greater than the
            current age. 
          format: 'int32' # TODO
          example: 20 # TODO
        favoriteColor:
          type: string
          description: 'Favorite color. Read only.'
          enum:
          - 'RED'
          - 'GREEN'
          - 'BLUE'
        bestFriend:
          type: string
          description: The ID of the knight's best friend. When
            creating or updating a knight, the service adds copies of
            the friend's shrubberies to the knight's shrubberies. The
            service does not add the knight's shrubberies to the best
            friend's shrubberies. Friendship is a one-way relationship.
            A knight whose favorite color is RED can only have a best
            friend with a GREEN favorite color. Also, GREEN can only
            befriend BLUE, BLUE can only befriend RED. A knight who's
            18 years old is considered to have GREEN as his favorite
            color, whatever their actual favorite color is. That young
            knight's actual favorite color is only taken into account
            once he reaches the mature age of 19. This property is
            read-only once you set it, updatable if empty. The service
            sets this property to the empty string when you slay the
            friend. You cannot update the best friend if the friend has
            a shrubbery worth over 99 pounds.
          format: 'guid' # TODO
          example: 'fedcba98-76543210f-edcb-a9876543210f'
        shrubberies:
          type: array
          description: An array of shrubberies owned by the knight. 
            When creating a knight, you must specify only 1 shrubbery. 
            You can update any of the shrubberies that the knight owns. 
            To add shrubberies, you must update the best friend.
          items:
            $ref: '#/components/schemas/RestShrubbery'
    RestShrubbery:
      type: object
      properties:
        height:
          minimum: 1.0 # TODO
          type: number
          description: Height, in meters. Read only. You can set height
            only when creating a new knight.
          format: 'float' # TODO
          example: 1.0 # TODO
        radius:
          minimum: 1.0 # TODO
          type: number
          description: Radius, in meters. Read only. You can set radius
            only when creating a new knight.
          format: 'float' # TODO
          example: 1.0 # TODO
        volume:
          minimum: 3.1 # TODO
          type: number
          description: Estimated volume, in cubic metres. Calculated
            from the height and radius when you create a new knight.
            Read only.
          format: 'float' # TODO
          example: 3.1 # TODO
        description:
          pattern: 'nice'
          type: string
          description: A textual description of the shrubbery. Must
            contain the text 'nice'. Readable and updatable. When you
            update this property, the service also recalculates the
            price.
          example: 'nicely pruned'
        price:
          minimum: 12 # TODO
          type: integer
          description: Price, in pound sterling, rounded down to the
            nearest integer. Read only. The service calculates the price
            by multiplying the volume by the number of characters in the
            description.
          format: 'int32' # TODO
          example: 40 # TODO
    RestCreateKnight:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RestKnight/properties/name'
        age:
          $ref: '#/components/schemas/RestKnight/properties/age'
        favoriteColor:
          $ref: '#/components/schemas/RestKnight/properties/favoriteColor'
        bestFriend:
          $ref: '#/components/schemas/RestKnight/properties/bestFriend'
        schrubberies:
          type: array
          items:
            $ref: '#/components/schemas/RestCreateShrubbery'
    RestEditKnight:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RestKnight/properties/name'
        age:
          $ref: '#/components/schemas/RestKnight/properties/age'
        bestFriend:
          $ref: '#/components/schemas/RestKnight/properties/bestFriend'
        shrubberies:
          type: array
          items:
            $ref: '#/components/schemas/RestEditShrubbery'
    RestCreateShrubbery:
      type: object
      properties:
        height:
          $ref: '#/components/schemas/RestShrubbery/properties/height'
        radius:
          $ref: '#/components/schemas/RestShrubbery/properties/radius'
        description:
          $ref: '#/components/schemas/RestShrubbery/properties/description'
    RestEditShrubbery:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/RestShrubbery/properties/description'
  parameters:
    kingdomIdInPath:
      name: kingdomId
      in: path
      description: Unique ID for your kingdom, assigned to you when you
        created your account.
      required: true
      schema:
        type: string
    knightIdInPath:
      name: knightId
      in: path
      description: Unique ID for the knight, assigned by the service
        when you created the knight.
      required: true
      schema:
        type: string
  requestBodies:
    createKnight:
      description: Creates a new knight
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RestCreateKnight'
      required: true
    editKnight:
      description: Updates an existing knight
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RestEditKnight'
      required: true
  securitySchemes:
    api_key: 
      type: http
      scheme: bearer
      bearerFormat: token
security:
  - api_key: []
